[build-system]
requires = ["setuptools>=70.1.0", "setuptools_scm>=8", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ramalama-stack"
description = "An external provider for Llama Stack allowing for the use of RamaLama for inference."
authors = [{ name = "The RamaLama Stack Authors" }]
readme = "README.md"
license = "Apache-2.0"
license-files = ["LICENSE"]
keywords = ["ramalama", "llama", "AI"]
requires-python = ">=3.12"
dynamic = ["version"]
dependencies = [
    "accelerate==1.7.0",
    "aiohappyeyeballs==2.6.1",
    "aiohttp==3.12.7",
    "aiosignal==1.3.2",
    "aiosqlite==0.21.0",
    "annotated-types==0.7.0",
    "anyio==4.9.0",
    "argcomplete==3.6.2",
    "asyncpg==0.30.0",
    "attrs==25.3.0",
    "autoevals==0.0.129",
    "blobfile==3.0.0",
    "braintrust-core==0.0.59",
    "certifi==2025.4.26",
    "chardet==5.2.0",
    "charset-normalizer==3.4.2",
    "chevron==0.14.0",
    "click==8.2.1",
    "colorama==0.4.6 ; sys_platform == 'win32'",
    "datasets==3.6.0",
    "deprecated==1.2.18",
    "dill==0.3.8",
    "distro==1.9.0",
    "ecdsa==0.19.1",
    "fastapi==0.115.12",
    "filelock==3.18.0",
    "fire==0.7.0",
    "frozenlist==1.6.0",
    "fsspec==2025.3.0",
    "googleapis-common-protos==1.70.0",
    "greenlet==3.2.2 ; (python_full_version < '3.14' and platform_machine == 'AMD64') or (python_full_version < '3.14' and platform_machine == 'WIN32') or (python_full_version < '3.14' and platform_machine == 'aarch64') or (python_full_version < '3.14' and platform_machine == 'amd64') or (python_full_version < '3.14' and platform_machine == 'ppc64le') or (python_full_version < '3.14' and platform_machine == 'win32') or (python_full_version < '3.14' and platform_machine == 'x86_64')",
    "grpcio==1.67.1",
    "h11==0.16.0",
    "hf-xet==1.1.2 ; platform_machine == 'aarch64' or platform_machine == 'amd64' or platform_machine == 'arm64' or platform_machine == 'x86_64'",
    "httpcore==1.0.9",
    "httpx==0.28.1",
    "httpx-sse==0.4.0",
    "huggingface-hub==0.32.4",
    "idna==3.10",
    "importlib-metadata==8.6.1",
    "jinja2==3.1.6",
    "jiter==0.10.0",
    "joblib==1.5.1",
    "jsonschema==4.24.0",
    "jsonschema-specifications==2025.4.1",
    "llama-stack==0.2.14",
    "llama-stack-client==0.2.14",
    "lxml==5.4.0",
    "markdown-it-py==3.0.0",
    "markupsafe==3.0.2",
    "mcp==1.9.2",
    "mdurl==0.1.2",
    "milvus-lite==2.4.12 ; sys_platform != 'win32'",
    "mpmath==1.3.0",
    "multidict==6.4.4",
    "multiprocess==0.70.16",
    "networkx==3.5",
    "numpy==2.2.6",
    "nvidia-cublas-cu12==12.6.4.1 ; platform_machine == 'x86_64' and sys_platform == 'linux'",
    "nvidia-cuda-cupti-cu12==12.6.80 ; platform_machine == 'x86_64' and sys_platform == 'linux'",
    "nvidia-cuda-nvrtc-cu12==12.6.77 ; platform_machine == 'x86_64' and sys_platform == 'linux'",
    "nvidia-cuda-runtime-cu12==12.6.77 ; platform_machine == 'x86_64' and sys_platform == 'linux'",
    "nvidia-cudnn-cu12==9.5.1.17 ; platform_machine == 'x86_64' and sys_platform == 'linux'",
    "nvidia-cufft-cu12==11.3.0.4 ; platform_machine == 'x86_64' and sys_platform == 'linux'",
    "nvidia-cufile-cu12==1.11.1.6 ; platform_machine == 'x86_64' and sys_platform == 'linux'",
    "nvidia-curand-cu12==10.3.7.77 ; platform_machine == 'x86_64' and sys_platform == 'linux'",
    "nvidia-cusolver-cu12==11.7.1.2 ; platform_machine == 'x86_64' and sys_platform == 'linux'",
    "nvidia-cusparse-cu12==12.5.4.2 ; platform_machine == 'x86_64' and sys_platform == 'linux'",
    "nvidia-cusparselt-cu12==0.6.3 ; platform_machine == 'x86_64' and sys_platform == 'linux'",
    "nvidia-nccl-cu12==2.26.2 ; platform_machine == 'x86_64' and sys_platform == 'linux'",
    "nvidia-nvjitlink-cu12==12.6.85 ; platform_machine == 'x86_64' and sys_platform == 'linux'",
    "nvidia-nvtx-cu12==12.6.77 ; platform_machine == 'x86_64' and sys_platform == 'linux'",
    "openai==1.84.0",
    "opentelemetry-api==1.33.1",
    "opentelemetry-exporter-otlp-proto-common==1.33.1",
    "opentelemetry-exporter-otlp-proto-http==1.33.1",
    "opentelemetry-proto==1.33.1",
    "opentelemetry-sdk==1.33.1",
    "opentelemetry-semantic-conventions==0.54b1",
    "packaging==25.0",
    "pandas==2.2.3",
    "peft==0.15.2",
    "pillow==11.2.1",
    "polyleven==0.9.0",
    "prompt-toolkit==3.0.51",
    "propcache==0.3.1",
    "protobuf==5.29.5",
    "psutil==7.0.0",
    "pyaml==25.5.0",
    "pyarrow==20.0.0",
    "pyasn1==0.6.1",
    "pycryptodomex==3.23.0",
    "pydantic==2.11.5",
    "pydantic-core==2.33.2",
    "pydantic-settings==2.9.1",
    "pygments==2.19.1",
    "pymilvus==2.5.10",
    "python-dateutil==2.9.0.post0",
    "python-dotenv==1.1.0",
    "python-jose==3.5.0",
    "python-multipart==0.0.20",
    "pytz==2025.2",
    "pyyaml==6.0.2",
    "ramalama==0.10.1",
    "referencing==0.36.2",
    "regex==2024.11.6",
    "requests==2.32.3",
    "rich==14.0.0",
    "rpds-py==0.25.1",
    "rsa==4.9.1",
    "safetensors==0.5.3",
    "scikit-learn==1.7.0",
    "scipy==1.15.3",
    "sentence-transformers==4.1.0",
    "setuptools==80.9.0",
    "six==1.17.0",
    "sniffio==1.3.1",
    "sqlalchemy==2.0.41",
    "sse-starlette==2.3.6",
    "starlette==0.46.2",
    "sympy==1.14.0",
    "termcolor==3.1.0",
    "threadpoolctl==3.6.0",
    "tiktoken==0.9.0",
    "tokenizers==0.21.1",
    "torch==2.7.0",
    "tqdm==4.67.1",
    "transformers==4.52.4",
    "triton==3.3.0 ; platform_machine == 'x86_64' and sys_platform == 'linux'",
    "trl==0.18.1",
    "typing-extensions==4.14.0",
    "typing-inspection==0.4.1",
    "tzdata==2025.2",
    "ujson==5.10.0",
    "urllib3==2.4.0",
    "uvicorn==0.34.3",
    "wcwidth==0.2.13",
    "wrapt==1.17.2",
    "xxhash==3.5.0",
    "yarl==1.20.0",
    "zipp==3.22.0",
]

[dependency-groups]
dev = [
    "pre-commit>=3.0.4,<4.0",
]

[project.urls]
homepage = "https://ramalama.ai"
Repository = "https://github.com/containers/ramalama-stack"
Issues = "https://github.com/containers/ramalama-stack/issues"

[tool.setuptools_scm]
version_file = "src/ramalama_stack/_version.py"
# do not include +gREV local version, required for Test PyPI upload
local_scheme = "no-local-version"

[tool.setuptools]
package-dir = { "" = "src" }
include-package-data = true

[tool.setuptools.package-data]
"ramalama_stack" = ["providers.d/**/*", "ramalama-run.yaml"]

[tool.ruff]
extend-exclude = ["*.ipynb"]
